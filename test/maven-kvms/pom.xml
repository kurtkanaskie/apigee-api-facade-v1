<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>exco</groupId>
	<artifactId>kvms</artifactId>
	<version>1.0</version>
	<name>kvms</name>
	<packaging>pom</packaging>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<org.slf4j.simpleLogger.defaultLogLevel>info</org.slf4j.simpleLogger.defaultLogLevel>
		<project.root.dir>${basedir}</project.root.dir>
		<target.root.dir>${basedir}/target</target.root.dir>
		<commit>none</commit>
		<branch>local</branch>
	</properties>

	<!-- This is where you add environment specific properties under various profile names 
		 For apigee.options, refer to "Advanced Configuration Options" under https://github.com/apigee/apigee-deploy-maven-plugin#pom-xml-sample 
	-->
	<profiles>
		<profile>
			<id>ngsaas-dev-1</id>
			<properties>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.profile>ngsaas-dev-1</apigee.profile>
				<!--
				<apigee.hosturl>https://apigee.googleapis.com</apigee.hosturl>
				-->
				<apigee.hosturl>https://napi-dev.kurtkanaskie.net/apigee-api-facade</apigee.hosturl>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.env>${EdgeEnv}</apigee.env>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<apigee.username>${EdgeUsername}</apigee.username>
                <apigee.serviceaccount.file>${EdgeServiceAccountFile}</apigee.serviceaccount.file>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>override</apigee.options>
			</properties>
		</profile>
		<profile>
			<id>ngsaas-test-1</id>
			<properties>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.profile>ngsaas-test-1</apigee.profile>
				<apigee.hosturl>https://napi-test.kurtkanaskie.net/apigee-api-facade</apigee.hosturl>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.env>${EdgeEnv}</apigee.env>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<apigee.username>cicd-test-service-account@ngsaas-5g-kurt.iam.gserviceaccount.com</apigee.username>
                <apigee.serviceaccount.file>${EdgeServiceAccountFile}</apigee.serviceaccount.file>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>override</apigee.options>
			</properties>
		</profile>
		<profile>
			<id>ngsaas-prod-1</id>
			<properties>
				<apigee.apiversion>v1</apigee.apiversion>
				<apigee.profile>ngsaas-prod-1</apigee.profile>
				<apigee.hosturl>https://napi.kurtkanaskie.net/apigee-api-facade</apigee.hosturl>
				<apigee.org>${EdgeOrg}</apigee.org>
				<apigee.env>${EdgeEnv}</apigee.env>
				<api.northbound.domain>${EdgeNorthboundDomain}</api.northbound.domain>
				<apigee.username>cicd-prod-service-account@ngsaas-5g-kurt.iam.gserviceaccount.com</apigee.username>
                <apigee.serviceaccount.file>${EdgeServiceAccountFile}</apigee.serviceaccount.file>
				<api.testtag>@errorHandling,@health,@wip,@mock</api.testtag>
				<apigee.options>override</apigee.options>
			</properties>
		</profile>		
	</profiles>

	<build>
		<plugins>
			<!-- copy the full apiproxy folder to target folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<resources>
								<resource>
									<!--source -->
									<directory>${project.root.dir}</directory>
									<filtering>true</filtering>
									<includes>
										<include>resources/**</include>
										<include>test/integration/**</include>
									</includes>
								</resource>
							</resources>
							<!--target -->
							<outputDirectory>${target.root.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- apigee Configuration -->
			<plugin>
				<groupId>com.apigee.edge.config</groupId>
				<artifactId>apigee-config-maven-plugin</artifactId>
				<version>2.1.0</version>
				<executions>
					<execution>
						<id>create-config-kvm</id>
						<phase>verify</phase>
						<goals>
							<goal>keyvaluemaps</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- install node, npm install, run apigeelint, run unit, run integration -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.8.0</version>
				<!-- NOTE: put executable in targetnode, otherwise uses node and deploy plugin thinks its a node.js proxy -->
				<configuration>
					<installDirectory>targetnode</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v12.16.2</nodeVersion>
						</configuration>
					</execution>
					<execution>
						<id>integration</id>
						<phase>install</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<skip>${skip.integration}</skip>
							<arguments>run integration -- --tags ${api.testtag}</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- cleaning dirs -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<skip>${skip.clean}</skip>
				</configuration>
				<executions>
					<!-- Don't clean on init for iteration on tests -->
					<execution>
						<id>auto-clean-init</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
					<!-- Don't clean target dir for debugging, post mortem -->
					<execution>
						<id>auto-clean-install</id>
						<phase>install</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
